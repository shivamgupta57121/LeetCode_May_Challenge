//Permutation in String
/*
Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.

 

Example 1:

Input: s1 = "ab" s2 = "eidbaooo"
Output: True
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:

Input:s1= "ab" s2 = "eidboaoo"
Output: False
 

Note:

The input strings only contain lower case letters.
The length of both given strings is in range [1, 10,000].
*/


class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        vector<int> goal(26), cur(26);
        int s1Len = s1.size();
        int s2Len = s2.size();
        for(char c : s1) goal[c-'a']++;
        for(int i=0;i<s2Len;i++){
            cur[s2[i]-'a']++;
            if(i>=s1Len) cur[s2[i-s1Len]-'a']--;
            if(cur==goal){ 
                return true;
            }
        }
        return false;
    }
};